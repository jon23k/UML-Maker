<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>0</y>
      <w>350</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>DesignParser
-
+ static void main(args : String[] ) 
+ recursiveAdd(List&lt;String&gt; classNames) List&lt;String&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>525</x>
      <y>7</y>
      <w>70</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ClassReader</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>364</x>
      <y>357</y>
      <w>189</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>&lt;&lt;abstract&gt;&gt;
Arrow
-
String pointsFrom
String pointsTo
String color
-
+ abstract convert() : String
+ setColor(color : String)
+ Map&lt;String, String&gt; getAttributes()
+ String generateAttributeTags()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>672</y>
      <w>238</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>ExtendsArrow
-
-String extendFormatting
-
+ convert() : String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>476</y>
      <w>238</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>ImplementsArrow
-
-String implementsFormatting
-
+ convert() : String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>343</x>
      <y>112</y>
      <w>238</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>GraphVizBuilder
--
- List&lt;JClass&gt; classes
- Map&lt;String, String&gt;
- Set&lt;Arrow&gt; arrows
- List&lt;String&gt; primitiveTypes
- Map&lt;String, JClass&gt; hashToJClass
--
+ run()
+ addArrow(arrow : Arrow)
+ List&lt;JClass&gt; getClasses()
+ Set&lt;Arrow&gt; getArrows()
+ void addExtendArrow(String hashName)
+ void addImplementsArrows(String hashName)
+ boolean isPrimitiveType(String type)
+ void addAssociationArrows(String hashName)
+ void addDependencyArrows(String hashName)
+ void createAndAddADArrowsFromType(JClass jclass, String[] typeArray, char ADKey)
+ Arrow createADArrow(String pointsFrom, String pointsTo, char ADKey, boolean oneToMany)
+ String getPrettyName(String s)
+ static Class&lt;?&gt; getClassFromFullyQualifiedName(String internalName)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>511</x>
      <y>329</y>
      <w>21</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>357</x>
      <y>35</y>
      <w>21</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>378</x>
      <y>14</y>
      <w>161</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>210.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>539</y>
      <w>238</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>AssociationArrow
-
-String assocFormatting
-
+ convert() : String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>413</x>
      <y>609</y>
      <w>238</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>DependencyArrow
-
- String dependencyFormatting
-
+ convert() : String
+ void setOneToMany(boolean b)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>665</x>
      <y>7</y>
      <w>392</w>
      <h>378</h>
    </coordinates>
    <panel_attributes>JClass
-
- ClassNode node
- List&lt;FieldNode&gt; fields
- List&lt;MethodNode&gt; methods
- List&lt;String&gt; interfaces
- String superclass
- String color
- final String graphVizNewLine
- final String actualNewLine
-
+ hasSuper() : boolean
+ hasInterfaces() : boolean
+ hasAssociations() : boolean
+ hasDependencies() : boolean
+ setColor(color : String)
+ setTemporaryName(tempName : String)
+ buildString() : String
+ buildMethods(ClassNode classNode) : String
- buildMethodArguments(method : MethodNode, parameterTypes : List&lt;String&gt;) : String
- buildMethodAccessModifier(MethodNode method) : String
+ buildFields(classNode : ClassNode) : String
- buildFieldAccessModifier(field : FieldNode) : String
- void addArchetypeClassTag(String classTag)
- void setAttribute(String attribute, String value)
- String buildDummyClassString(String hashName, String FQName)
+ String getName()
+ String getSuperName()
+ String getHashName()
+ List&lt;String&gt; getInterfaces()
+ List&lt;MethodNode&gt; getMethods()
+ List&lt;FieldNode&gt; getFields()
+ static String getClassNodeFQName(ClassNode cn)
+ static String[] getFieldNodeTypeFQNames(FieldNode fn)
+ static String[] getMethodReturnTypeFQNames(MethodNode mn)
+ static String[] getMethodArgumentTypeFQNames(MethodNode mn)
- static String[] FQNameHelper(String s)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>574</x>
      <y>168</y>
      <w>105</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>511</x>
      <y>70</y>
      <w>70</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>ClassNode</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>525</x>
      <y>84</y>
      <w>21</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>217</y>
      <w>252</w>
      <h>49</h>
    </coordinates>
    <panel_attributes>&lt;&lt;interface&gt;&gt;
PatternDetector
-
+analyze(List&lt;JClass&gt; classes, List&lt;Arrow&gt; arrow)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>112</y>
      <w>147</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>294</y>
      <w>252</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>SingletonDetector
-
+analyze(List&lt;JClass&gt; classes, List&lt;Arrow&gt; arrow)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>343</x>
      <y>462</y>
      <w>84</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;30.0;10.0;60.0;100.0;60.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>343</x>
      <y>497</y>
      <w>84</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0;100.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>343</x>
      <y>560</y>
      <w>84</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0;100.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>343</x>
      <y>616</y>
      <w>84</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0;100.0;110.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>357</y>
      <w>252</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>FCOIViolationDetector
-
+analyze(List&lt;JClass&gt; classes, List&lt;Arrow&gt; arrow)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>266</x>
      <y>259</y>
      <w>49</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>10.0;10.0;50.0;40.0;50.0;170.0;30.0;170.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>308</y>
      <w>35</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>30.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>42</x>
      <y>105</y>
      <w>175</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>&lt;&lt;singleton&gt;&gt;
DetectorFramework
-
- List&lt;PatternDetectors&gt; detectors
- DetectorFramework instance
-
- DetectorFramework()
+void addDetector(Detector d) 
+DetectorFramework getInstance()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>112</x>
      <y>189</y>
      <w>21</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;40.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>126</x>
      <y>35</y>
      <w>21</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;100.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>413</y>
      <w>252</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>DIPViolationDetector
-
+analyze(List&lt;JClass&gt; classes, List&lt;Arrow&gt; arrow)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>462</y>
      <w>252</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>AdapterDetector
-
+analyze(List&lt;JClass&gt; classes, List&lt;Arrow&gt; arrow)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>35</x>
      <y>518</y>
      <w>252</w>
      <h>42</h>
    </coordinates>
    <panel_attributes>AdapterDetector
-
+analyze(List&lt;JClass&gt; classes, List&lt;Arrow&gt; arrow)
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>371</y>
      <w>35</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>30.0;10.0;30.0;100.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>434</y>
      <w>35</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>30.0;10.0;30.0;70.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>280</x>
      <y>476</y>
      <w>35</w>
      <h>77</h>
    </coordinates>
    <panel_attributes>lt=.</panel_attributes>
    <additional_attributes>30.0;10.0;30.0;90.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>728</x>
      <y>413</y>
      <w>203</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>Note
-
for DIP inversion, use a vector for
the field and the return type
to compare the count of each
type.

For example, lets say class1
has a string, int, and a list. This 
would be represented as
&lt;1,1,1,0,0....&gt;

Now class2 has a string, list, 
double. This would be represented
as &lt;1,0,1,1,0...&gt;

USE COSIGN TO COMPARE THESE 
VECTORS</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
